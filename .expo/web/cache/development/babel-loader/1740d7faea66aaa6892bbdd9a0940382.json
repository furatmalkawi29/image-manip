{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/furatmalkawi/where-am-I-app/WhereAmIApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Asset } from 'expo-asset';\nimport * as ImageManipulator from 'expo-image-manipulator';\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var image;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              image = Asset.fromModule(require(\"./dino.gif\"));\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(image.downloadAsync());\n\n            case 3:\n              setImage(image);\n              setReady(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var _rotate90andFlip = function _rotate90andFlip() {\n    var manipResult;\n    return _regeneratorRuntime.async(function _rotate90andFlip$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.localUri || image.uri, [{\n              rotate: 90\n            }, {\n              flip: ImageManipulator.FlipType.Vertical\n            }], {\n              compress: 1,\n              format: ImageManipulator.SaveFormat.PNG\n            }));\n\n          case 2:\n            manipResult = _context2.sent;\n            setImage(manipResult);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _renderImage = function _renderImage() {\n    return React.createElement(View, {\n      style: {\n        marginVertical: 20,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: image.localUri || image.uri\n      },\n      style: {\n        width: 300,\n        height: 300,\n        resizeMode: 'contain'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, ready && image && _renderImage(), React.createElement(Button, {\n    title: \"Rotate and Flip\",\n    onPress: _rotate90andFlip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/furatmalkawi/where-am-I-app/WhereAmIApp/App.js"],"names":["React","useState","useEffect","Asset","ImageManipulator","App","ready","setReady","image","setImage","fromModule","require","downloadAsync","_rotate90andFlip","manipulateAsync","localUri","uri","rotate","flip","FlipType","Vertical","compress","format","SaveFormat","PNG","manipResult","_renderImage","marginVertical","alignItems","justifyContent","width","height","resizeMode","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,wBAAlC;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,kBAA0BJ,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA0BN,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACOM,cAAAA,KADP,GACeL,KAAK,CAACO,UAAN,CAAiBC,OAAO,cAAxB,CADf;AAAA;AAAA,+CAEOH,KAAK,CAACI,aAAN,EAFP;;AAAA;AAGCH,cAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,cAAAA,QAAQ,CAAC,IAAD,CAAR;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGT,gBAAgB,CAACU,eAAjB,CACxBN,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACQ,GADA,EAExB,CAAC;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAD,EAAiB;AAAEC,cAAAA,IAAI,EAAEd,gBAAgB,CAACe,QAAjB,CAA0BC;AAAlC,aAAjB,CAFwB,EAGxB;AAAEC,cAAAA,QAAQ,EAAE,CAAZ;AAAeC,cAAAA,MAAM,EAAElB,gBAAgB,CAACmB,UAAjB,CAA4BC;AAAnD,aAHwB,CADH;;AAAA;AACjBC,YAAAA,WADiB;AAMvBhB,YAAAA,QAAQ,CAACgB,WAAD,CAAR;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AASA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,EADX;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAEb,QAAAA,GAAG,EAAER,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACQ;AAA/B,OADV;AAEE,MAAA,KAAK,EAAE;AAAEc,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,GAAtB;AAA2BC,QAAAA,UAAU,EAAE;AAAvC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD,GAdD;;AAgBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWJ,MAAAA,cAAc,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,KAAK,IAAIE,KAAT,IAAkBkB,YAAY,EADjC,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAgC,IAAA,OAAO,EAAEb,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, View, Image } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport * as ImageManipulator from 'expo-image-manipulator';\n\nexport default function App() {\n  const [ready, setReady] = useState(false);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const image = Asset.fromModule(require('./dino.gif'));\n      await image.downloadAsync();\n      setImage(image);\n      setReady(true);\n    })();\n  }, []);\n\n  const _rotate90andFlip = async () => {\n    const manipResult = await ImageManipulator.manipulateAsync(\n      image.localUri || image.uri,\n      [{ rotate: 90 }, { flip: ImageManipulator.FlipType.Vertical }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setImage(manipResult);\n  };\n\n  const _renderImage = () => {\n    return (\n      <View\n        style={{\n          marginVertical: 20,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Image\n          source={{ uri: image.localUri || image.uri }}\n          style={{ width: 300, height: 300, resizeMode: 'contain' }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center' }}>\n      {ready && image && _renderImage()}\n      <Button title=\"Rotate and Flip\" onPress={_rotate90andFlip} />\n    </View>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React , {useEffect, useState} from 'react';\n// import { StatusBar } from 'expo-status-bar';\n// import { StyleSheet, Text, View } from 'react-native';\n// import * as Location from 'expo-location'\n// import axios from 'axios'\n\n// export default function App() {\n\n//   let [latitude,setLatitude] = useState();\n//   let [longitude,setLongitude] = useState();\n\n//   useEffect(()=> {\n//     ( async ()=>{\n//       //app asks user for permission to access location\n//       //status: 'granted' (string)/ when user accepts\n//       let {status} = await Location.requestForegroundPermissionsAsync();\n//       if(status===\"granted\"){\n      \n//       //gets object of coordinates : {coords: {â€¦}, timestamp: 1626139271918}\n//       let locationData = await Location.getCurrentPositionAsync();\n//       let longitude= locationData.coords.longitude;\n//       let latitude = locationData.coords.latitude;\n\n\n//       let response = await axios.get(`https://us1.locationiq.com/v1/nearby.php?key=pk.2676b2a01020d446e53ba86301abe09a&lat=-37.870983&lon=144.980714&tag=restaurant&radius=100&format=json`);\n//       console.log(response.data)\n//       console.log(longitude);\n//       console.log(latitude);\n//     }\n\n\n//     })();//self invoked function\n//   },[])\n\n//   return (\n//     <View style={styles.container}>\n//       <Text>{longitude}</Text>\n//       <Text>{latitude}</Text>\n\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: 'pink',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}