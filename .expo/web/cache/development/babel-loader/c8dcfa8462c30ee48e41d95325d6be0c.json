{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/furatmalkawi/where-am-I-app/WhereAmIApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Asset } from 'expo-asset';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as ImagePicker from 'expo-image-picker';\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status, image;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n              image = Asset.fromModule(require(\"./dino.gif\"));\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(image.downloadAsync());\n\n            case 9:\n              setImage(image);\n              setReady(true);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _rotate90andFlip = function _rotate90andFlip() {\n    var manipResult;\n    return _regeneratorRuntime.async(function _rotate90andFlip$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(\"\" + (image.localUri || image.uri), [{\n              rotate: 90\n            }, {\n              flip: ImageManipulator.FlipType.Vertical\n            }], {\n              compress: 1,\n              format: ImageManipulator.SaveFormat.PNG\n            }));\n\n          case 2:\n            manipResult = _context3.sent;\n            setImage(manipResult);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Rotate and Flip\",\n    onPress: _rotate90andFlip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/furatmalkawi/where-am-I-app/WhereAmIApp/App.js"],"names":["React","useState","useEffect","Asset","ImageManipulator","ImagePicker","App","ready","setReady","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","fromModule","require","downloadAsync","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","_rotate90andFlip","manipulateAsync","localUri","rotate","flip","FlipType","Vertical","compress","format","SaveFormat","PNG","manipResult","flex","justifyContent","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, View, Image, Platform } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as ImagePicker from 'expo-image-picker';\n\n\nexport default function App() {\n  const [ready, setReady] = useState(false);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n      const image = Asset.fromModule(require('./dino.gif'));\n      await image.downloadAsync();\n      setImage(image);\n      setReady(true);\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  const _rotate90andFlip = async () => {\n    const manipResult = await ImageManipulator.manipulateAsync(\n      `${image.localUri || image.uri}`,\n      [{ rotate: 90 }, { flip: ImageManipulator.FlipType.Vertical }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setImage(manipResult);\n  };\n\n\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center' }}>\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n      <Button title=\"Rotate and Flip\" onPress={_rotate90andFlip} />\n    </View>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React , {useEffect, useState} from 'react';\n// import { StatusBar } from 'expo-status-bar';\n// import { StyleSheet, Text, View } from 'react-native';\n// import * as Location from 'expo-location'\n// import axios from 'axios'\n\n// export default function App() {\n\n//   let [latitude,setLatitude] = useState();\n//   let [longitude,setLongitude] = useState();\n\n//   useEffect(()=> {\n//     ( async ()=>{\n//       //app asks user for permission to access location\n//       //status: 'granted' (string)/ when user accepts\n//       let {status} = await Location.requestForegroundPermissionsAsync();\n//       if(status===\"granted\"){\n      \n//       //gets object of coordinates : {coords: {…}, timestamp: 1626139271918}\n//       let locationData = await Location.getCurrentPositionAsync();\n//       let longitude= locationData.coords.longitude;\n//       let latitude = locationData.coords.latitude;\n\n\n//       let response = await axios.get(`https://us1.locationiq.com/v1/nearby.php?key=pk.2676b2a01020d446e53ba86301abe09a&lat=-37.870983&lon=144.980714&tag=restaurant&radius=100&format=json`);\n//       console.log(response.data)\n//       console.log(longitude);\n//       console.log(latitude);\n//     }\n\n\n//     })();//self invoked function\n//   },[])\n\n//   return (\n//     <View style={styles.container}>\n//       <Text>{longitude}</Text>\n//       <Text>{latitude}</Text>\n\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: 'pink',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}